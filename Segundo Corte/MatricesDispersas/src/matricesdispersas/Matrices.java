/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package matricesdispersas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cesar
 */
public class Matrices extends javax.swing.JFrame {
    DefaultTableModel modelo;
    
    Lista listaA = new Lista();
    Lista listaB = new Lista();
    Lista listaC = new Lista();
    
    public Matrices() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ColumnaA = new javax.swing.JTextField();
        FilaA = new javax.swing.JTextField();
        ValorA = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ColumnaB = new javax.swing.JTextField();
        FilaB = new javax.swing.JTextField();
        ValorB = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaR = new javax.swing.JTable();
        InsertarB = new javax.swing.JButton();
        InsertarA = new javax.swing.JButton();
        MostrarB = new javax.swing.JButton();
        MostrarA = new javax.swing.JButton();
        MultiplicarM = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaB = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaA = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        MostrarAB = new javax.swing.JButton();
        Limpiar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        MatrizResultante = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        MatrizA = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        MatrizB = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Ingrese la columna A");

        jLabel3.setText("Ingrese la Fila  A");

        jLabel4.setText("Ingrese el valor A");

        FilaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilaAActionPerformed(evt);
            }
        });

        jLabel5.setText("Ingrese el valor B");

        FilaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilaBActionPerformed(evt);
            }
        });

        jLabel6.setText("Ingrese la columna B");

        jLabel7.setText("Ingrese la Fila  B");

        TablaR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Columna", "Fila", "Valor"
            }
        ));
        jScrollPane1.setViewportView(TablaR);

        InsertarB.setText("Insertar Matriz B");
        InsertarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertarBActionPerformed(evt);
            }
        });

        InsertarA.setText("Insertar Matriz A");
        InsertarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertarAActionPerformed(evt);
            }
        });

        MostrarB.setText("Mostrar B");
        MostrarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarBActionPerformed(evt);
            }
        });

        MostrarA.setText("MostrarA");
        MostrarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarAActionPerformed(evt);
            }
        });

        MultiplicarM.setText("Multiplicar A y B");
        MultiplicarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiplicarMActionPerformed(evt);
            }
        });

        TablaB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Columna", "Fila", "Valor"
            }
        ));
        jScrollPane2.setViewportView(TablaB);

        TablaA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Columna", "Fila", "Valor"
            }
        ));
        jScrollPane3.setViewportView(TablaA);

        jLabel1.setText("Matriz B");

        jLabel9.setText("Matriz Resultante");

        MostrarAB.setText("Mostrar A*B");
        MostrarAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarABActionPerformed(evt);
            }
        });

        Limpiar.setText("Limpiar");
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });

        jLabel10.setText("Matriz A");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(MultiplicarM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MostrarAB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Limpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 9, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(MostrarA)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(FilaA, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                .addComponent(ColumnaA)
                                .addComponent(ValorA))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addGap(32, 32, 32))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel4)
                                                .addComponent(InsertarA))
                                            .addGap(34, 34, 34)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(FilaB)
                                    .addComponent(ColumnaB)
                                    .addComponent(ValorB, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(InsertarB)
                                .addGap(18, 18, 18)
                                .addComponent(MostrarB)))))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(26, 26, 26))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(289, 289, 289)
                    .addComponent(jLabel10)
                    .addContainerGap(299, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(ColumnaA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(FilaA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ValorA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InsertarA)
                            .addComponent(MostrarA)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 24, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(ColumnaB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(FilaB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ValorB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MostrarB)
                            .addComponent(InsertarB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(MultiplicarM, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(MostrarAB, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addComponent(jLabel10)
                    .addContainerGap(582, Short.MAX_VALUE)))
        );

        MatrizResultante.setColumns(20);
        MatrizResultante.setRows(5);
        jScrollPane5.setViewportView(MatrizResultante);

        MatrizA.setColumns(20);
        MatrizA.setRows(5);
        jScrollPane6.setViewportView(MatrizA);

        MatrizB.setColumns(20);
        MatrizB.setRows(5);
        jScrollPane7.setViewportView(MatrizB);

        jLabel8.setText("Matriz A");

        jLabel11.setText("Matriz B");

        jLabel12.setText("Matriz Resultante");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                    .addComponent(jScrollPane7)
                    .addComponent(jScrollPane5))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FilaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilaAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FilaAActionPerformed

    private void FilaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilaBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FilaBActionPerformed

    private void InsertarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertarBActionPerformed
       
        if(Integer.parseInt(this.ValorB.getText()) == 0){
            JOptionPane.showMessageDialog(null, "Inserte un valor diferente de cero");
        }else{
            NodoColumna nuevaColumna = new NodoColumna(Integer.parseInt(this.ColumnaB.getText()));
            NodoFila nuevaFila = new NodoFila(Integer.parseInt(this.FilaB.getText()),Integer.parseInt(this.ValorB.getText()));
            if(listaB.getCabeza() == null){
                listaB.setCabeza(nuevaColumna);
                nuevaColumna.setAbajo(nuevaFila);
            }else{
                listaB.insertar(nuevaColumna, nuevaFila, listaB.getCabeza());
            }
        }
        
    }//GEN-LAST:event_InsertarBActionPerformed

    private void InsertarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertarAActionPerformed
       
        if(Integer.parseInt(this.ValorA.getText()) == 0){
            JOptionPane.showMessageDialog(null, "Inserte un valor diferente de cero");
        }else{
            NodoColumna nuevaColumna = new NodoColumna(Integer.parseInt(this.ColumnaA.getText()));
            NodoFila nuevaFila = new NodoFila(Integer.parseInt(this.FilaA.getText()),Integer.parseInt(this.ValorA.getText()));
            if(listaA.getCabeza() == null){
                listaA.setCabeza(nuevaColumna);
                nuevaColumna.setAbajo(nuevaFila);
            }else{
                listaA.insertar(nuevaColumna, nuevaFila, listaA.getCabeza());
            }
        }
        
    }//GEN-LAST:event_InsertarAActionPerformed

    private void MultiplicarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiplicarMActionPerformed

        listaA.mayores();
        listaB.mayores();
        if(listaA.getColumnaMayor() != listaB.getFilaMayor()){
            JOptionPane.showMessageDialog(null, "La multiplicación de las matrices no es posible debido a su tamaño");
        }else{
            multiplicar();
        }
        
    }//GEN-LAST:event_MultiplicarMActionPerformed

    public void multiplicar(){
        NodoColumna columnaA = listaA.getCabeza();
        while(columnaA != null){
            NodoColumna columnaB = listaB.getCabeza();
            while(columnaB != null){
                NodoFila filaB = columnaB.getAbajo();
                while(filaB != null){
                    if(columnaA.getColumna() == filaB.getFila()){
                        NodoFila filaA = columnaA.getAbajo();
                        while(filaA != null){
                            NodoColumna nuevaColumna = new NodoColumna(columnaB.getColumna());
                            NodoFila nuevaFila = new NodoFila(filaA.getFila(),filaA.getValor()*filaB.getValor());
                            if(listaC.getCabeza() == null){
                                listaC.setCabeza(nuevaColumna);
                                nuevaColumna.setAbajo(nuevaFila);
                            }else{
                                listaC.insertarResultado(nuevaColumna, nuevaFila, listaC.getCabeza());
                            }
                            filaA = filaA.getAbajo();
                        }
                    }
                    filaB = filaB.getAbajo();
                }
                columnaB = columnaB.getSiguiente();
            }
            columnaA = columnaA.getSiguiente();
        }
        
    }
    
    private void MostrarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarAActionPerformed
        modelo= (DefaultTableModel)TablaA.getModel();
        int rows=modelo.getRowCount();
        String result="";
        for(int i=rows-1;i>=0;i--){
            modelo.removeRow(i);
        }
        MatrizA.setText(null);
        NodoColumna columna= listaA.getCabeza();
        while(columna!=null){
            NodoFila fila=columna.getAbajo();
            result += columna.getColumna()+":  ";
            while(fila!=null){
                String[] lista= new String[3]; 
                lista[0]=columna.getColumna()+"";
                lista[1]=fila.getFila()+"";
                lista[2]=fila.getValor()+"";
                if(fila.getAbajo() == null){
                    result += fila.getFila()+","+fila.getValor()+"\n";
                }else{
                    result += fila.getFila()+","+fila.getValor()+" -> ";
                }
                modelo.addRow(lista);
                fila=fila.getAbajo();
            }
            columna= columna.getSiguiente();
        }
        
        this.TablaA.setModel(modelo);
        MatrizA.setText(result);
    }//GEN-LAST:event_MostrarAActionPerformed
    
    private void MostrarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarBActionPerformed
        modelo = (DefaultTableModel)TablaB.getModel();
        String result="";
        int rows = modelo.getRowCount();
        for(int i=rows-1;i>=0;i--){
            modelo.removeRow(i);
        }
        MatrizB.setText(null);
        NodoColumna columna = listaB.getCabeza();
        while(columna != null){
            NodoFila fila = columna.getAbajo();
            result += columna.getColumna()+":  ";
            while(fila != null){
                String[] lista = new String[3];
                lista[0] = columna.getColumna()+"";
                lista[1] = fila.getFila()+"";
                lista[2] = fila.getValor()+"";
                if(fila.getAbajo() == null){
                    result += fila.getFila()+","+fila.getValor()+"\n";
                }else{
                    result += fila.getFila()+","+fila.getValor()+" -> ";
                }
                modelo.addRow(lista);
                fila = fila.getAbajo();
            }
            columna = columna.getSiguiente();
        }
        
        this.TablaB.setModel(modelo);     
        MatrizB.setText(result);
        
    }//GEN-LAST:event_MostrarBActionPerformed

    private void MostrarABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarABActionPerformed
        modelo = (DefaultTableModel)TablaR.getModel();
        int rows = modelo.getRowCount();
        String result="";
        for(int i=rows-1;i>=0;i--){
            modelo.removeRow(i);
        }
        MatrizResultante.setText(null);
        NodoColumna columna = listaC.getCabeza();
        while(columna != null){
            NodoFila fila = columna.getAbajo();
            result += columna.getColumna()+":  ";
            while(fila != null){
                String[] lista = new String[3];
                lista[0] = columna.getColumna()+"";
                lista[1] = fila.getFila()+"";
                lista[2] = fila.getValor()+"";
                if(fila.getAbajo() == null){
                    result += fila.getFila()+","+fila.getValor()+"\n";
                }else{
                    result += fila.getFila()+","+fila.getValor()+" -> ";
                }
                modelo.addRow(lista);
                fila = fila.getAbajo();
            }
            columna = columna.getSiguiente();
        }
        
        this.TablaR.setModel(modelo);
        MatrizResultante.setText(result);
        
    }//GEN-LAST:event_MostrarABActionPerformed

    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        listaA = new Lista();
        listaB = new Lista();
        listaC = new Lista();
    }//GEN-LAST:event_LimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Matrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Matrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Matrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Matrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Matrices().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ColumnaA;
    private javax.swing.JTextField ColumnaB;
    private javax.swing.JTextField FilaA;
    private javax.swing.JTextField FilaB;
    private javax.swing.JButton InsertarA;
    private javax.swing.JButton InsertarB;
    private javax.swing.JButton Limpiar;
    private javax.swing.JTextArea MatrizA;
    private javax.swing.JTextArea MatrizB;
    private javax.swing.JTextArea MatrizResultante;
    private javax.swing.JButton MostrarA;
    private javax.swing.JButton MostrarAB;
    private javax.swing.JButton MostrarB;
    private javax.swing.JButton MultiplicarM;
    private javax.swing.JTable TablaA;
    private javax.swing.JTable TablaB;
    private javax.swing.JTable TablaR;
    private javax.swing.JTextField ValorA;
    private javax.swing.JTextField ValorB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    // End of variables declaration//GEN-END:variables
}
